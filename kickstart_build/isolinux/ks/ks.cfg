#version=RHEL7

# Install OS instead of upgrade
install

# Text mode installer
text

# Reboot after installation
reboot

# Keyboard layouts
keyboard --vckeymap=br --xlayouts='br','us'

# System language
lang en_US.UTF-8

# Setup network interfaces via DHCP
network --device=enp0s25 --bootproto=dhcp --onboot=yes
network --device=enp14s0 --bootproto=dhcp --onboot=yes

# Set root pw here
rootpw root
# Set default user
user --groups=wheel --name=lnls-bpm --password=lnls-bpm --gecos="lnls-bpm"
firewall --disabled
authconfig --enableshadow --passalgo=sha512
firstboot --disabled

# SELinux configuration
# By default, selinux is enforcing
selinux --enforcing
#selinux --permissive

# Services
services --enabled=ntpd,ntpdate

# Installation logging level
logging --level=debug

# System timezone
timezone America/Sao_Paulo --isUtc

# Use only SDA
ignoredisk --only-use=sda

# Clear the Master Boot Record
zerombr

# Partition clearing information
clearpart --drives=sda --all --initlabel

# System bootloader configuration
bootloader --location=mbr --driveorder=vda --append="tsc=reliable divider=10 plymouth.enable=0 console=ttyS0"

# Automatically create partitions
autopart --type=lvm

%packages
@^minimal
@core
@development
kexec-tools
acpid
iputils
man
net-tools
ntp
ntpdate
parted
vim-common
vim-enhanced
vim-minimal
wget

%end

%addon com_redhat_kdump --enable --reserve-mb='auto'

%end

%post --nochroot --log=/mnt/sysimage/var/log/ks.post01.log

#!/bin/sh
set -x -v

echo "Kickstart postinstall stage 1"
echo "==> copying files from media to install drive..."
cp -r /run/install/repo/postinstall /mnt/sysimage/root

%end

%post --log=/var/log/ks.post02.log
#!/bin/sh
set -x -v

# export some sensible environement variables
export PATH=${PATH}:/usr/local/bin:/bin:/usr/bin:/usr/local/sbin:/usr/sbin

## Build date used for motd and product file
BUILDDATE=`date +%Y%m%d`
NAME="LNLS BPM CentOS 7.2"
DOCS="https://github.com/lnls-dig/bpm-distro"

# Create MOTD
echo "Creating /etc/motd"
mv /etc/motd /etc/motd-backup
cat << MOTD > /etc/motd
  _       _   _  _        _____
 | |     | | | || |      / ____|
 | |     |  || || |     | (___
 | |     | .   || |      |___ |
 | |____ | ||  || |____  ____) |
 |______||_| |_||______||_____/
             ____   _____   __  __
            |  _ | |  __ | |  |/  |
            | |_) || |__) || |  / |
            |  _ < |  ___/ | ||/| |
            | |_) || |     | |  | |   Instance ($NAME $BUILDDATE)
            |____/ |_|     |_|  |_|    $DOCS

MOTD

# MOTD symlinks
echo "Creating /etc/motd symlinks"
ln -sf /etc/motd /etc/issue
ln -sf /etc/motd /etc/issue.net

# Create product file
echo "Creating /etc/product file"
cat << PRODUCT > /etc/product
Name: LNLS BPM Instance
Image: $NAME $BUILDDATE
Documentation: $DOCS
Description: $NAME 64-bit image with just essential packages for the LNLS BPM.
PRODUCT

# Clean up all yum caches
echo "Cleaning up yum caches"
/usr/bin/yum clean all

# Remove hostname
echo "Clearing out /etc/hostname"
cat /dev/null > /etc/hostname

# Disable Avahi
echo "Disabling Avahi"
systemctl disable avahi-daemon.service

# Disable kdump
echo "Disabling kdump"
systemctl disable kdump.service

# Enable all interfaces on boot
echo "Enabling all interfaces to start on boot"
sed -i -e "s/ONBOOT=.*/ONBOOT=yes/g" /etc/sysconfig/network-scripts/ifcfg-*

# Enable NetworkManager-wait-online for compatibility with older systemd
# version
echo "Enabling NetworkManager-wait-online service"
systemctl enable NetworkManager-wait-online.service

# Add Broadcast rules for EPICS' PVs

echo "Creating NetworkManager script for EPICS' PVs"
cat << 'EPICSINITSCRIPT' > /etc/NetworkManager/dispatcher.d/22-epicsbcast
#!/bin/sh -e
# Called when an interface goes up / down

# Author: Ralph Lange <Ralph.Lange@gmx.de>

# Make any incoming Channel Access name resolution queries go to the broadcast address
# (to hit all IOCs on this host)

# Change this if you run CA on a non-standard port
PORT=5064

IFACE=$1
MODE=$2

[ "$IFACE" != "lo" ] || exit 0

line=`/sbin/ifconfig $IFACE | grep "inet "`

# Fedora ifconfig output
addr=`echo $line | sed -e 's/.*inet \([0-9.]*\).*/\1/'`
bcast=`echo $line | sed -e 's/.*broadcast \([0-9.]*\).*/\1/'`

if [ -z "$addr" -o -z "$bcast" ]
then
    # RHEL ifconfig output
    addr=`echo $line | sed -e 's/.*inet addr:\([0-9.]*\).*/\1/'`
    bcast=`echo $line | sed -e 's/.*Bcast:\([0-9.]*\).*/\1/'`
fi

[ -z "$addr" -o -z "$bcast" ] && return 1

if [ "$MODE" = "up" ]
then
    /sbin/iptables -t nat -A PREROUTING -d $addr -p udp --dport $PORT -j DNAT --to-destination $bcast
elif [ "$MODE" = "down" ]
then
    /sbin/iptables -t nat -D PREROUTING -d $addr -p udp --dport $PORT -j DNAT --to-destination $bcast
fi

exit 0
EPICSINITSCRIPT

echo "chmoding /etc/NetworkManager/dispatcher.d/22-epicsbcast"
chmod 755 /etc/NetworkManager/dispatcher.d/22-epicsbcast

# Change user/role and security context of file. Otherwise,
# SELinux will not allow execution of file
chcon -v --user=system_u --role=object_r --type=NetworkManager_initrc_exec_t /etc/NetworkManager/dispatcher.d/22-epicsbcast

# Replace default GRUB config file by our own
echo "Creating default GRUB2 config script"
cat << GRUB2BOOTCFG > /etc/default/grub
GRUB_TIMEOUT=5
GRUB_DISTRIBUTOR="$(sed 's, release .*$,,g' /etc/system-release)"
GRUB_DEFAULT=saved
GRUB_DISABLE_SUBMENU=true
GRUB_TERMINAL_OUTPUT="console"
GRUB_CMDLINE_LINUX="crashkernel=auto rd.lvm.lv=centos/root rd.lvm.lv=centos/swap rhgb quiet \
pciehp.pciehp_force=1 pciehp.pciehp_debug=1 pcie_ports=native pci=realloc,noaer"
GRUB_DISABLE_RECOVERY="true"
GRUB2BOOTCFG

# Add Gradle config file
echo "Creating Gradle config file for root user"
mkdir -p /root/.gradle
touch /root/.gradle/gradle.properties
chmod 755 /root/.gradle/gradle.properties
cat << GRADLECFG > /root/.gradle/gradle.properties
org.gradle.daemon=false
GRADLECFG

echo "Creating Gradle config file for lnls-bpm"
mkdir -p /home/lnls-bpm/.gradle
touch /home/lnls-bpm/.gradle/gradle.properties
chmod 755 /home/lnls-bpm/.gradle/gradle.properties
cat << GRADLECFG > /home/lnls-bpm/.gradle/gradle.properties
org.gradle.daemon=false
GRADLECFG

# Generate GRUB2 config files
grub2-mkconfig -o /boot/grub2/grub.cfg

# Ensure we have sane and consistent defaults for ntp.conf
sed s/restrict\ default\ nomodify\ notrap\ nopeer\ noquery/restrict\ default\ kod\ nomodify\ notrap\ nopeer\ noquery/ -i /etc/ntp.conf
# For IPv6
echo "restrict -6 default kod nomodify notrap nopeer noquery" >> /etc/ntp.conf
sed s/restrict\ ::1/restrict\ -6\ ::1/ -i /etc/ntp.conf

# Install symlinks for perl5
ln -s /usr/bin/xsubpp /usr/share/perl5/ExtUtils/

# Install BPM application
cd /root/postinstall/apps

# Install BPM Distro
cd bpm-distro
# Source distro environment variables
. ./repo-versions.sh
cd ..

# Install BPM App
cd bpm-app
./get-all.sh -r server -b afcv3_1 -a no -f rpm -e yes -x yes -s no -l yes -c yes -p yes -i
cd ..

# Install TIM App
cd tim-rx-app/tim-rx-epics-ioc
make && make install
cd ../../

echo "End of Kickstart"
%end
